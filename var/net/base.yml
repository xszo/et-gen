# base profile
id: ""
# variables refered with '=name'
var: {}
# misc options
misc:
  # lag test
  test: http://cp.cloudflare.com/
  t-dns: cloudflare.com@1.1.1.1
  # # dns over udp
  # dns:
  #   - "1.1.1.1"
  #   - "1.0.0.1"
  # # dns over https
  # doh:
  #   - https://1.1.1.1/dns-query
  #   - https://1.0.0.1/dns-query
# routing info
route:
  - id: local
    node: { id: direct }
    filter: [use: local]
  - id: system
    node:
      type: static
      name: System
      list: [-main, -direct, =node]
    filter:
      - use: system
    icon:
      sort: 1
      emoji: 🏳️‍🌈
      sf: arrow.left.and.right.system
  - id: stream
    node:
      type: static
      name: Stream
      list: [-main, -direct, =node]
    filter:
      - use: stream
    icon:
      sort: 1
      emoji: 🏳️‍🌈
      sf: arrow.left.and.right.system
  - id: cn
    node:
      type: static
      name: R-CN
      list: [-main, -direct, =node]
    filter:
      - use: cn
    icon:
      sort: 3
      emoji: 🏳️‍🌈
      sf: arrow.forward.system
  - id: jp
    node:
      type: static
      name: R-JP
      list: [-main, -direct, =node]
    filter:
      - use: jp
    icon:
      sort: 3
      emoji: 🏳️‍🌈
      sf: arrow.forward.system
  - id: tw
    node:
      type: static
      name: R-TW
      list: [-main, -direct, =node]
    filter:
      - use: tw
    icon:
      sort: 3
      emoji: 🏳️‍🌈
      sf: arrow.forward.system
  - id: us
    node:
      type: static
      name: R-US
      list: [-main, -direct, =node]
    filter:
      - use: us
    icon:
      sort: 3
      emoji: 🏳️‍🌈
      sf: arrow.forward.system
  - id: main
    node:
      type: static
      name: Default
      list: [-direct, -reject, =node]
    filter:
      - type: main
      - use: world
    icon:
      sort: 0
      emoji: 🏳️‍🌈
      sf: arrow.left.arrow.right.system
node:
  # type, static manual set dest, test set based on lag test
  # list, include proxy, = ref pattern.region
  - { name: Node, type: test, list: =xx }
  - { name: CN, type: test, list: =cn }
  - { name: DE, type: test, list: =de }
  - { name: FR, type: test, list: =fr }
  - { name: GB, type: test, list: =gb }
  - { name: HK, type: test, list: =hk }
  - { name: JP, type: test, list: =jp }
  - { name: KR, type: test, list: =kr }
  - { name: SG, type: test, list: =sg }
  - { name: TW, type: test, list: =tw }
  - { name: US, type: test, list: =us }
  # - { name: Node0, type: static, list: =xx }
  # - { name: Node1, type: static, list: =xx }
  # - { name: Node2, type: static, list: =xx }
  # - { name: Node3, type: static, list: =xx }
  - { name: NodeX, type: test, list: "^(?!.*\\[.\\])" }
  - { name: NodeA, type: test, list: "\\[A\\]" }
  - { name: NodeB, type: test, list: "\\[B\\]" }
  - { name: NodeC, type: test, list: "\\[C\\]" }
