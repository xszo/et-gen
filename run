#!/bin/bash

ListGen=(net net/filter)

# get options
while getopts "aigo" opt; do
  case $opt in
  a) OptAct=true ;; # run once
  i) OptIni=true ;; # install
  g) OptGen=true ;; # generate
  o) OptOut=true ;; # publish
  esac
done

# install dependencies
if [[ -n $OptIni || -n $OptAct ]]; then
  # install linux packages
  varPkg=(git python3 python3-pip)
  if [[ -x $(command -v xcode-select) ]]; then
    if ![[ -x $(command -v brew) ]]; then
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    if [[ -x $(command -v brew) ]]; then
      brew install -y $varPkg
    elif [[ -d /opt/homebrew ]]; then
      /opt/homebrew/bin/brew install -y $varPkg
    else echo no; fi
  elif [[ -x $(command -v apt-get) ]]; then
    sudo apt-get install -y $varPkg
  elif [[ -x $(command -v dnf) ]]; then
    sudo dnf install -y $varPkg
  elif [[ -x $(command -v yum) ]]; then
    sudo yum install -y $varPkg
  else
    echo no $varPkg
  fi
  # install python packages
  python3 -m pip install -r requirements.txt
fi

# install git config
if [[ -n $OptIni && -z $OptAct ]]; then
  # init submodule
  git submodule update --init --recursive
  # init worktree
  if ! git worktree list | grep -q out; then
    if [[ -e out ]]; then rm -rf out; fi
    git worktree add out etc
  fi
  # init branch
  wait
  git checkout -qf main
  cd doc
  git checkout -qf master
  cd ../out
  git checkout -qf etc
  git pull -q --rebase
  cd ..
fi

# generate output
if [[ -n $OptGen || -n $OptAct ]]; then
  cp -rf src/out .
  cp -f LICENSE out/LICENSE
  for item in ${ListGen[@]}; do
    python3 src/$item/run.py
  done
fi

# publish output
if [[ -n $OptOut && -z $OptAct ]]; then
  cd out
  git add --all
  git commit -qm gen --amend --reset-author
  git push -qf
  cd ..
fi
